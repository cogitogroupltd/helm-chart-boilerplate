apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "generic.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app: {{ include "generic.fullname" . }}
    version: "{{ substr 0 12  .Values.image.tag | default .Chart.AppVersion }}"
    {{- include "generic.labels" . | nindent 4 }}
    {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if .Values.orleans.enabled }}
    orleans/serviceId: {{ include "generic.fullname" . }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "generic.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  template:
    metadata:
      annotations:
        co.elastic.logs.{{ include "generic.fullname" . }}-service/enabled: "true"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        rollme: "{{ .Values.rollout.restart.timestamp }}"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "generic.fullname" . }}
        version: "{{ substr 0 12  .Values.image.tag }}"
        {{- include "generic.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.additionalPodYaml }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ include "generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
      {{- with .Values.initContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ include "generic.fullname" . }}-service
        {{- if or .Values.configMap.envFrom .Values.configMap.enabled .Values.configenv .Values.secenv }}
          envFrom: 
        {{- end }}  
        {{- if .Values.configenv }}
          - configMapRef:
              name: {{ include "generic.fullname" . }}-configmap
        {{- end }}  
        {{- if .Values.secenv }}
          - secretRef:
              name: {{ include "generic.fullname" . }}-secenv
        {{- end }}  
        {{- if eq .Values.tty "true" }}
          tty: true
        {{- end }}
        {{- if eq .Values.stdin "true" }}
          stdin: true
        {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.image }}
          {{- $imagePath := "" }}
          {{- if .digest }}
            {{- $imagePath = (printf "%s@%s" .repository .digest) }}
          {{- else }}
            {{- $defaultTag := .tag }}
            {{- $imagePath = (printf "%s:%s" .repository $defaultTag) }}
          {{- end }}
          {{- if .registry }}
            {{- $imagePath = (printf "%s/%s" .registry $imagePath) }}
          {{- end }}
          image: {{ $imagePath | quote }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $value := .Values.services }}
          {{- if not (empty $value) }}
          - name: {{ $value.name }}
            containerPort: {{ $value.containerPort }}
            protocol: TCP
          {{- end }}
          {{- end }}
          {{- range $k, $v := .Values.extraPorts }}
          - containerPort: {{ $v.containerPort }}
            name: {{ $v.name }}
            {{ if eq $v.type "HostPort" }}
            hostPort: {{ $v.hostPort }}
            {{- end }}
          {{- end }}
          env:
          {{- if .Values.env }}
          {{- if .Values.orleans.enabled }}
          # Configure settings to let Orleans know which cluster it belongs to
          # and which pod it is running in
          - name: ORLEANS_SERVICE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/serviceId']
          - name: ORLEANS_CLUSTER_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/clusterId']
          {{- end }}
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          {{- range $name, $value := .Values.env }}
          {{- if not (empty $value) }}
          - name: {{ $name | quote }}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          # Params for env vars populated from k8s secrets
          {{- if .Values.envVarsFromSecret }}
          {{- range $key, $value := .Values.envVarsFromSecret }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $value.secretKeyRef | quote }}
                key: {{ $value.key | quote }}
          {{- end }}
          {{- end }}
          {{- if or .Values.filesFromSecret .Values.extraVolumeMounts }}
          volumeMounts:
          {{- if .Values.extraVolumeMounts }}
          {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
          {{- with .Values.filesFromSecret }}
          {{- range $key, $value := . }}
            - name: {{ $key }}
              mountPath: {{ $value.mountPath }}
              readOnly: true
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with .Values.readinessCheck }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.livenessCheck }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.startupCheck }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.redisSidecar.enabled }}
        - name: {{ include "generic.fullname" . }}-redis
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.redisSidecar.image }}"
          imagePullPolicy: {{ .Values.redisSidecar.pullPolicy }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.redisSidecar.targetPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.redisSidecar.targetPort }}
            periodSeconds: {{ .Values.redisSidecar.livenessInterval }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.filesFromSecret .Values.extraVolumes }}
      volumes:
      {{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- with .Values.filesFromSecret }}
      {{- range $key, $value := . }}
        - name: {{ $key }}
          secret:
            secretName: {{ $value.secret }}
      {{- end }}
      {{- end }}
      {{- end }}
